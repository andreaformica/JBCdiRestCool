<project name="CommonTasks">

	<!-- Init -->
	<target name="init-properties">
		<property file="${basedir}/ant.properties" />
		<property file="${basedir}/common/checkstyle/svom_checks.properties" />

		<property environment="env" value="JBOSS_HOME" />
		<property environment="env" value="SVOM_EXTERNAL_CLASSPATH" />
		<property environment="env" value="SVOM_LIB_DIR" />
		<property environment="env" value="JAVA_OPT_DEBUG" />
		<property environment="env" value="FINDBUGS_HOME" />
		<property environment="env" value="XMPP_HOME" />
		<property environment="env" value="JAXB_HOME" />
		<property environment="env" value="PWD" />

		<condition property="java.debug.flag" value="${env.JAVA_OPT_DEBUG}" else="false">
			<isset property="env.JAVA_OPT_DEBUG" />
		</condition>

		<property name="build.dir" value="${basedir}/build" />
		<property name="build.exe" value="${build.dir}/exe" />
		<property name="build.classes.dir" value="${build.dir}/classes" />
		<property name="build.doc.dir" value="${build.dir}/doc" />
		<property name="build.lib.dir" value="${build.dir}/lib" />
		<property name="build.report.dir" value="${build.dir}/report" />
		<property name="build.cover.dir" value="${build.report.dir}/cobertura" />

		<condition property="lib.dir" value="${env.SVOM_EXTERNAL_CLASSPATH}" else="${basedir}/external/share/java">
			<isset property="env.SVOM_EXTERNAL_CLASSPATH" />
		</condition>

		<property name="cobertura.dir" value="${lib.dir}/cobertura" />

		<condition property="findbugs.dir"  value="${env.FINDBUGS_HOME}" else="${lib.dir}/findbugs">
			<isset property="env.FINDBUGS_HOME" />
		</condition>

		<condition property="svom.lib.dir" value="${env.SVOM_LIB_DIR}" else="${basedir}/lib">
			<isset property="env.SVOM_LIB_DIR" />
		</condition>

		<condition property="svom.data.dir" value="${env.SVOM_DATA_DIR}" else="${basedir}/data">
			<isset property="env.SVOM_DATA_DIR" />
		</condition>
		<condition property="jboss.client.lib.dir" value="${env.JBOSS_HOME}/client" else="${lib.dir}/jboss">
			<isset property="env.JBOSS_HOME" />
		</condition>
		<condition property="jboss.server.lib.dir" value="${env.JBOSS_HOME}/server/default/lib" else="${lib.dir}/jboss">
			<isset property="env.JBOSS_HOME" />
		</condition>
		<condition property="jboss.commons.lib.dir" value="${env.JBOSS_HOME}/common/lib" else="${lib.dir}/jboss">
			<isset property="env.JBOSS_HOME" />
		</condition>
		<condition property="jaida.lib.dir" value="${env.JAIDA_HOME}/lib" else="${lib.dir}/aida">
			<isset property="env.JAIDA_HOME" />
		</condition>
		<condition property="jfreechart.lib.dir" value="${env.JFREE_HOME}/lib" else="${lib.dir}/jfree">
			<isset property="env.JFREE_HOME" />
		</condition>
		<available file="${env.JBOSS_HOME}/modules" type="dir" property="jboss7.present" />
		<condition property="jboss.lib.dir" value="${env.JBOSS_HOME}/modules" else="${lib.dir}/jboss">
			<isset property="jboss7.present" />
		</condition>
		<available file="${jboss.server.lib.dir}" type="dir" property="server.lib.present" />
		<condition property="jboss.lib.dir" value="${jboss.server.lib.dir}" else="${lib.dir}/jboss">
			<isset property="server.lib.present" />
		</condition>
		<available file="${jboss.commons.lib.dir}" type="dir" property="common.lib.present" />
		<condition property="jboss.lib.dir" value="${jboss.commons.lib.dir}" else="${jboss.server.lib.dir}">
			<isset property="common.lib.present" />
		</condition>
		<condition property="jboss.aop.lib.dir" value="${env.JBOSS_AOP}/lib" else="${lib.dir}/jboss">
			<isset property="env.JBOSS_AOP" />
		</condition>
		<condition property="castor.lib.dir" value="${env.CASTOR_HOME}" else="${lib.dir}/castor">
			<isset property="env.CASTOR_HOME" />
		</condition>
		<condition property="apache.lib.dir" value="${env.APACHE_HOME}" else="${lib.dir}/apache">
			<isset property="env.APACHE_HOME" />
		</condition>
	    <condition property="xerces.lib.dir" value="${env.XERCES_HOME}" else="${lib.dir}/apache/xerces">
	        <isset property="env.XERCES_HOME" />
	    </condition>
		<condition property="jdbc.lib.dir" value="${env.JDBC_HOME}" else="${lib.dir}/db">
			<isset property="env.JDBC_HOME" />
		</condition>
		<condition property="antice.lib.dir" value="${env.ZEROC_HOME}" else="${lib.dir}">
			<isset property="env.ZEROC_HOME" />
		</condition>
		<condition property="jaxb.lib.dir" value="${env.JAXB_HOME}" else="${lib.dir}/jaxb">
			<isset property="env.JAXB_HOME" />
		</condition>
		<condition property="xmpp.lib.dir" value="${env.XMPP_HOME}" else="${lib.dir}/xmpp">
			<isset property="env.XMPP_HOME" />
		</condition>
		<condition property="findbugs.lib.dir" value="${env.FINDBUGS_HOME}/lib" else="${lib.dir}/findbugs">
			<isset property="env.FINDBUGS_HOME" />
		</condition>

		<property name="resteasy.lib.dir" value="${basedir}/lib/resteasy-jaxrs.war/WEB-INF/lib" />

		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${lib.dir}/ant/ant-contrib.jar" />
			</classpath>
		</taskdef>

                 <path id="testng.classpath">
                        <fileset dir="${lib.dir}">
                                <include name="testng.jar" />
                        </fileset>
                </path>
		<path id="xmpp.classpath">
			<fileset dir="${xmpp.lib.dir}">
				<include name="*.jar" />
			</fileset>
		</path>
		<path id="findbugs.classpath">
			<fileset dir="${findbugs.lib.dir}">
				<include name="findbugs-ant.jar" />
			</fileset>
		</path>

                <path id="cobertura.classpath">
                      <fileset dir="${cobertura.dir}">
                              <include name="cobertura.jar" />
                              <include name="lib/**/*.jar" />
                       </fileset>
                </path>
                <taskdef classpathref="cobertura.classpath"
                         resource="tasks.properties" />

		<path id="jaxb.classpath">
			<fileset dir="${jaxb.lib.dir}">
				<include name="jaxb-*.jar" />
				<include name="activation.jar" />
				<include name="jsr*.jar" />
			</fileset>
		</path>
		<path id="resteasy.classpath">
			<fileset dir="${resteasy.lib.dir}">
				<include name="*.jar" />
			</fileset>
		</path>
		<path id="jdbc.classpath">
			<fileset dir="${jdbc.lib.dir}">
				<include name="*.jar" />
			</fileset>
		</path>

		<path id="jboss7.classpath">
			<fileset dir="${jboss.lib.dir}">
				<include name="javaee/**/*.jar" />
				<include name="javax/**/*.jar" />
				<include name="asm/**/*.jar" />
				<include name="org/**/*.jar" />
			</fileset>
		</path>
		<path id="jboss.classpath">
			<fileset dir="${jboss.lib.dir}">
				<include name="hibernate-core.jar" />
				<include name="hibernate-entitymanager.jar" />
				<include name="hibernate-annotations.jar" />
				<include name="mail.jar" />
				<include name="commons-collections.jar" />
				<include name="commons-logging.jar" />
				<include name="commons-httpclient.jar" />
				<include name="jbosssx.jar" />
				<include name="servlet-api.jar" />
				<include name="jsp-api.jar" />
			</fileset>
		</path>
		<path id="jboss.client.classpath">
			<fileset dir="${jboss.client.lib.dir}">
				<include name="log4j.jar" />
				<include name="antlr.jar" />
				<include name="javassist.jar" />
				<include name="jbossall-client.jar" />
				<include name="ejb3-persistence.jar" />
			</fileset>
		</path>
		<path id="castor.classpath">
			<fileset dir="${castor.lib.dir}">
				<include name="castor*.jar" />
			</fileset>
		</path>
		<path id="jaida.classpath">
			<fileset dir="${jaida.lib.dir}">
				<include name="aida*.jar" />
				<include name="freehep*.jar" />
				<include name="openide*jar" />
			</fileset>
		</path>
		<path id="jfreechart.classpath">
			<fileset dir="${jfreechart.lib.dir}">
				<include name="jfree*.jar" />
				<include name="itext*.jar" />
				<include name="jcommon-*.jar" />
			</fileset>
		</path>

		<path id="jbossaop.classpath">
			<fileset dir="${jboss.aop.lib.dir}">
				<include name="jboss-aop-single.jar" />
			</fileset>
		</path>
		<path id="apache.classpath">
			<fileset dir="${apache.lib.dir}">
				<include name="commons-*.jar" />
				<include name="log4j*.jar" />
			</fileset>
		</path>
	    <path id="xerces.classpath">
	        <fileset dir="${xerces.lib.dir}">
	            <include name="*.jar" />
	        </fileset>
	    </path>
		<path id="rss.classpath">
			<fileset dir="${lib.dir}">
				<include name="jdom*.jar" />
				<include name="rome*.jar" />
			</fileset>
		</path>
		<path id="jgoodies.classpath">
			<fileset dir="${lib.dir}">
				<include name="looks.jar" />
				<include name="forms.jar" />
			</fileset>
		</path>

		<!-- Useful shortcuts -->
		<patternset id="jbossclient.jar.files">
			<include name="jbossall-client.jar" />
			<include name="jboss-ejb3-proxy-client.jar" />
			<include name="jboss-ejb3-core-client.jar" />
			<include name="jboss-ejb3-security-client.jar" />
			<include name="jboss-ejb3-proxy-clustered-client.jar" />
			<include name="jboss-ejb3-proxy-impl-client.jar" />
			<include name="jboss-ejb3-proxy-spi-client.jar" />
			<include name="jboss-ejb3-ext-api-impl.jar" />
			<include name="jboss-ejb3-ext-api.jar" />
			<include name="jboss-common-core.jar" />
			<include name="jboss-integration.jar" />
			<include name="jboss-remoting.jar" />
			<include name="jboss-messaging-client.jar" />
			<include name="jboss-client.jar" />
			<include name="jboss-aspect-jdk50-client.jar" />
			<include name="jboss-aop-client.jar" />
			<include name="jboss-ejb3-common-client.jar" />
			<include name="jnp-client.jar" />
			<include name="jboss-security-spi.jar" />
			<include name="jbosssx-client.jar" />
			<include name="jbosscx-client.jar" />
			<include name="jboss-serialization.jar" />
			<include name="jboss-ejb3-client.jar" />
			<include name="ejb3-persistence.jar" />
			<include name="javassist.jar" />
			<include name="concurrent.jar" />
			<include name="slf4j-api.jar" />
			<include name="slf4j-jboss-logging.jar" />
			<include name="trove.jar" />
			<include name="jboss-mdr.jar" />
			<include name="jboss-logging-spi.jar" />
			<include name="jboss-javaee.jar" />
		</patternset>
		<patternset id="jbossaop.jar.files">
			<include name="jboss-aop-single.jar" />
		</patternset>
		<patternset id="jbossserver.jar.files">
			<include name="antlr.jar" />
			<include name="cglib.jar" />
			<include name="jbosssx.jar" />
			<include name="commons-collections.jar" />
			<include name="commons-httpclient.jar" />
			<include name="commons-logging.jar" />
			<include name="log4j.jar" />
			<include name="hibernate-core.jar" />
			<include name="hibernate-commons-annotations.jar" />
			<include name="hibernate-entitymanager.jar" />
			<include name="hibernate-validator.jar" />
			<include name="hibernate-annotations.jar" />
			<include name="mail.jar" />
			<include name="jsp-api.jar" />
		</patternset>
		<patternset id="lib.jar.files">
			<include name="dom4j.jar" />
			<include name="PersistenceUtils.jar" />
			<include name="ojdbc14.jar" />
			<include name="castor-1.3*.jar" />
			<include name="xercesImpl.jar" />
			<include name="commons-*.jar" />
			<include name="junit.jar" />
			<include name="jdom*.jar" />
			<include name="rome*.jar" />
			<include name="displaytag*.jar" />
			<include name="upload*.jar" />
		</patternset>
		<patternset id="script.files">
			<include name="**" />
		</patternset>
		<patternset id="utility.files">
			<include name="auth.conf" />
			<include name="log4j.xml" />
		</patternset>
		<patternset id="svom.app.jars">
			<include name="Svom*.jar" />
		</patternset>
		<patternset id="jaida.jars">
			<include name="aida*.jar" />
			<include name="freehep*.jar" />
			<include name="openide*jar" />
		</patternset>
		<patternset id="jfreechart.jars">
			<include name="jfree*.jar" />
			<include name="itext*.jar" />
			<include name="jcommon-*.jar" />
		</patternset>
	</target>

	<target name="init" depends="init-properties" />

	<!-- Prepare -->
	<target name="prepare" depends="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${build.doc.dir}" />
		<mkdir dir="${build.lib.dir}" />
		<mkdir dir="${build.report.dir}" />
	</target>


	<!-- clean -->
	<target name="clean-all" depends="init">
		<delete dir="${build.dir}" />
	</target>
	<target name="clean" depends="init">
		<delete dir="${build.dir}/classes" />
	</target>

	<!-- compile -->
	<target name="copy-resources" depends="prepare" />
	<target name="compile" depends="copy-resources" />
	<target name="build" depends="compile" />

	<!-- install -->
	<target name="install" depends="build">
		<copy todir="${svom.lib.dir}">
			<fileset dir="${build.lib.dir}">
				<include name="**/*.jar" />
				<include name="**/*.war" />
				<include name="**/*.sar" />
			</fileset>
		</copy>
	</target>

	<!-- documentation -->
	<target name="doc" depends="prepare">
		<javadoc sourcepath="${src.dir}" destdir="${build.doc.dir}">
			<classpath>
				<path refid="project.class.path" />
			</classpath>
		</javadoc>
	</target>

	<!-- Help -->
	<target name="help" depends="init" description="Display defined targets.">
		<echo message="Available targets :" />
		<echo message="clean, clean-all, compile, javadoc, jar" />
		<echo message="test, checkstyle" />
		<echo message="${project.help.message}" />
	</target>


	<!-- CheckStyle -->
	<target name="init-checkstyle" depends="init,prepare">
		<taskdef resource="checkstyletask.properties" classpath="${lib.dir}/checkstyle/checkstyle-5.1/checkstyle-all-5.1.jar" />
	</target>

	<target name="checkstyle" depends="init-checkstyle" description="Generates a report of code convention violations.">

		<checkstyle config="${basedir}/common/checkstyle/svom_checks.xml" failureProperty="checkstyle.failure" failOnViolation="false">
			<classpath>
				<fileset dir="${build.lib.dir}">
					<include name="*.jar" />
				</fileset>
				<!-- <pathelement location="${build.classes.dir}"/>
				<path refid="project.class.path"/> -->
			</classpath>
			<formatter type="plain" />
			<formatter type="xml" tofile="${build.report.dir}/checkstyle_report.xml" />
			<fileset dir="${src.dir}" includes="**/*.java" excludes="**/test/*.java **/package-info.java" />
		</checkstyle>
	</target>

	<!-- run this target as part of automated build -->
	<target name="checkstyle-nightly" depends="checkstyle" if="checkstyle.failure" description="Sends email if checkstyle detected code conventions violations.">

		<!-- use your own server and email addresses below. See Ant documentation for details -->

		<mail from="qa@some.domain" tolist="someone@some.domain,someoneelse@some.domain" mailhost="mailbox.some.domain" subject="Checkstyle violation(s) in project ${ant.project.name}" files="checkstyle_report.html" />

	</target>
	
	 <!-- FindBugs -->
	        <!-- See http://findbugs.sourceforge.net/manual/anttask.html -->
	        <!-- The GUI may also be used. -->

	        <target name="init-findbugs" depends="init,prepare">
	                <taskdef name="findbugs" onerror="ignore" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
	                        <classpath refid="findbugs.classpath" />
	                </taskdef>
	        </target>

	        <target name="findbugs" depends="init-findbugs">

	                <findbugs home="${findbugs.dir}" debug="false" failOnError="true" effort="max" output="xml" excludefilter="${conf.dir}/exclude.xml" outputFile="${b
	uild.report.dir}/foundbugs.xml">
	                        <auxClasspath refid="project.class.path" />
	                        <sourcePath path="${src.dir}" />
	                        <class location="${build.classes.dir}" />
	                </findbugs>
	        </target>
</project>
